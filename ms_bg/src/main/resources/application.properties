# 设置服务端口号
server.port=80
# ====== springboot整合mybatis配置 ======
# 别名
# mybatis.type-aliases-package=net.xdclass.base_project.domain
# 驱动可以不用配置，可以自动识别
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://120.48.0.155:3306/ms?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=1111
#spring.datasource.password=1111
# 一般不用配置数据源，默认的数据源为com.zaxxer.hikari.HikariDataSource
# 如果不使用默认的数据源 ，可以使用以下方式配置其它数据源
# spring.datasource.type =com.alibaba.druid.pool.DruidDataSource
# 开启打印sql语句，一般用于本地开发测试
# mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#============== kafka配置 ===================
# 指定kafka 代理地址，可以多个，使用逗号隔开
spring.kafka.bootstrap-servers=120.48.0.155:9092
#========= provider  =========
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#========= consumer  =========
# 指定默认消费者group id
spring.kafka.consumer.group-id=ms-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

